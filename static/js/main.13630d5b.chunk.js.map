{"version":3,"sources":["components/AddForm/AddForm.module.scss","components/Contacts/Contacts.module.scss","components/Filter/Filter.module.scss","components/Section/Section.module.scss","components/Button/Button.module.scss","components/ContactItem/ContactItem.module.scss","components/Button/Button.js","components/AddForm/AddForm.js","components/ContactItem/ContactItem.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Button","this","props","label","type","onClick","className","s","Component","AddForm","state","name","number","handleChange","target","value","setState","handleSubmit","evt","preventDefault","onSubmit","reset","Form","Label","Input","onChange","pattern","title","required","ContactItem","id","Contact","Contacts","contacts","onDeleteContact","ContactsList","map","ContactsItem","Filter","Section","children","Title","App","filter","addContact","find","item","alert","contact","nanoid","prevState","deleteContact","data","changeFilter","e","currentTarget","getVisibleContacts","normalizedFilter","toLowerCase","sortContacts","includes","sort","a","b","localeCompare","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13630d5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddForm_Form__2iS5Z\",\"Label\":\"AddForm_Label__1tfew\",\"Input\":\"AddForm_Input__2McYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"Contacts_ContactsList__3d-tJ\",\"ContactsItem\":\"Contacts_ContactsItem__238C-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2sheC\",\"Input\":\"Filter_Input__TN8JA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__CqcNT\",\"Title\":\"Section_Title__3JdV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2BYYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"ContactItem_Contact__1bXNx\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.scss';\n\nclass Button extends Component {\n    static propTypes = {\n        label: PropTypes.string.isRequired,\n        onClick: PropTypes.func,\n    };\n\n    render() {\n        const { label, type, onClick } = this.props;\n\n        return (\n            <button className={s.Button} type={type} onClick={onClick}\n            > {label}\n            </button >\n        );\n    }\n}\nexport default Button;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport s from './AddForm.module.scss';\n\nclass AddForm extends Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    };\n\n    state = {\n        name: '',\n        number: ''\n    };\n\n    handleChange = ({ target }) => {\n        const { name, value } = target;\n\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = evt => {\n        evt.preventDefault();\n\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n\n        return (\n            <form className={s.Form} onSubmit={this.handleSubmit}>\n                <label className={s.Label}>\n                    <p>Name</p>\n                    <input\n                        className={s.Input}\n                        onChange={this.handleChange}\n                        value={name}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                <label className={s.Label}>\n                    <p>Number</p>\n                    <input\n                        className={s.Input}\n                        onChange={this.handleChange}\n                        value={number}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    ></input>\n                </label>\n                <Button label=\"Add contact\" type=\"submit\" />\n            </form >\n        );\n    }\n}\n\nexport default AddForm;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport s from './ContactItem.module.scss';\n\nclass ContactItem extends Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const { id, name, number, onClick } = this.props;\n\n        return (\n            <>\n                <p className={s.Contact}>{name}: {number}</p>\n                <Button\n                    label=\"Delete\"\n                    type=\"button\"\n                    onClick={() => onClick(id)}\n                >\n                </Button>\n            </>\n        )\n    }\n}\n\nexport default ContactItem;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport s from './Contacts.module.scss';\n\nclass Contacts extends Component {\n    static propTypes = {\n        contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired).isRequired).isRequired,\n        onDeleteContact: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const { contacts, onDeleteContact } = this.props;\n\n        return (\n            <ul className={s.ContactsList}>\n                {contacts.map(({ id, name, number }) => (\n                    <li key={id} className={s.ContactsItem}>\n                        <ContactItem id={id} name={name} number={number} onClick={onDeleteContact} />\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nexport default Contacts;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.scss';\n\nclass Filter extends Component {\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const { value, onChange } = this.props;\n\n        return (\n            <label className={s.Label}>\n                <p>Find contacs by name</p>\n                <input\n                    className={s.Input}\n                    onChange={onChange}\n                    value={value}\n                    type=\"text\"\n                />\n            </label>\n        );\n    }\n}\n\nexport default Filter;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.scss';\n\nclass Section extends Component {\n    static propTypes = {\n        title: PropTypes.string,\n        children: PropTypes.node,\n    };\n\n    render() {\n        const { title, children } = this.props;\n        return (\n            <section className={s.Section}>\n                <h2 className={s.Title}>{title}</h2>\n                {children}\n            </section>\n        );\n    }\n}\n\nexport default Section;","\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport AddForm from './components/AddForm';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter/Filter';\nimport Section from './components/Section';\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: ''\n  };\n\n  addContact = ({ name, number }) => {\n    const isUnique = this.state.contacts.find(item => (item.name === name));\n\n    if (isUnique) {\n      alert(`${name} name is already in contacts`)\n    } else {\n      const contact = {\n        id: nanoid(),\n        name,\n        number\n      };\n\n      this.setState(prevState => ({ contacts: [...prevState.contacts, contact] }));\n    }\n  };\n\n  deleteContact = data => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== data),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return this.sortContacts(contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    ));\n  };\n\n  sortContacts = data => {\n    return [...data].sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <AddForm onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n          <Contacts contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}